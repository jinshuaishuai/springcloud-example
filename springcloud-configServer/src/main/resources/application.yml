#配置中心服务1
---
server:
  port: 8771
  
spring:
  application:
    name: config-servers
  profiles:  configServer1     #在利用java -jar启动时，可以按照：java -jar xxx.jar --spring.profiles.active=configServer2
  cloud:
    config:
      server:
        git:
          uri: https://github.com/jinshuaishuai/springcloud-config.git  #GitHub远程配置文件的地址
          username: jinshuaishuai     #GitHub用户名，可配可不配，因为这个仓库是开源的，可以不通过用户名和密码，直接拉取代码
          password: 518629cp3         #GitHub密码
          search-paths:  com/**       #扫描github仓库该包及其子包所有目录，登录到GitHub上，会发现该仓库的包结构
    
eureka:
  client:
    service-url:
      default-zone:  http://localhost:8761/eureka/      #将Config服务注册到本地的Eureka服务发现里去

#配置中心服务2
---     
server:
  port: 8772
  
spring:
  application:
    name: config-servers      #这里，两个配置中心项目名称要保持一致
  profiles:  configServer2    #在利用java -jar启动时，可以按照：java -jar xxx.jar --spring.profiles.active=configServer2
  cloud:
    config:
      server:
        git:
          uri: https://github.com/jinshuaishuai/springcloud-config.git  #GitHub远程配置文件的地址
          username: jinshuaishuai     #GitHub用户名，可配可不配，因为这个仓库是开源的，可以不通过用户名和密码，直接拉取代码
          password: 518629cp3         #GitHub密码
          search-paths:  com/**       #扫描github仓库该包及其子包所有目录，登录到GitHub上，会发现该仓库的包结构
    
eureka:
  client:
    service-url:
      default-zone:  http://localhost:8761/eureka/      #将Config服务注册到本地的Eureka服务发现里去